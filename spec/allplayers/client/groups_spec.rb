require 'helper'

describe AllPlayers::Client do
  describe "Group" do
    before :all do
      # Create Group.
      $random_title = (0...8).map{65.+(rand(25)).chr}.join
      more_params = {}
      $location = {
        :street => '122 Main ',
        :additional => 'Suite 303',
        :city => 'Lewisville',
        :province => 'TX',  # <-- Test Breaker!
        :zip => '75067',
        :country => 'us',
      }
      $group = $apci_session.group_create(
        $random_title,
        'This is a test group generated by group_spec.rb',
        $location,
        ['Sports', 'Baseball'],
        more_params
      )

      # Create User.
      $birthday = Date.new(1983,5,23)
      $random_first = (0...8).map{65.+(rand(25)).chr}.join
      $user = $apci_session.user_create(
        $random_first + '@example.com',
        $random_first,
        'FakeLast',
        $birthday,
        'Male'
      )
      # User Join Group.
      $apci_session.user_join_group($group['uuid'], $user['uuid'], 'Player')
      $users = $apci_session.group_members_list($group['uuid'])
      $users_uuids = []
      $users['item'].each do | user |
        $users_uuids.push(user['uuid'])
      end

      # User's Groups
      $groups = $apci_session.user_groups_list($user['uuid'])

      # Group Roles
      $roles = $apci_session.group_roles_list($group['uuid'])
      $roles.each do | uuid, role |
        $role = uuid.dup if role['name'] == 'Fan'
      end
      $role[0] = ''
    end

    it "should be created properly." do
      $group['uuid'].should_not == nil
      group = $apci_session.group_get($group['uuid'])
      group['title'].should == $random_title
    end

    it "should list users." do
      $users['item'].first['uri'].should include($group['uuid'].to_s)
      $users['item'].first['uuid'].should_not == nil
    end

    describe "User" do
      it "should be able to join group." do
        $users_uuids.include?($user['uuid'].to_s).should == true
      end

      it "should list groups." do
        $groups['item'].first['uuid'].should == $group['uuid']
      end

      it "should be able to have a role assigned in a group." do
        response = $apci_session.user_group_add_role($group['uuid'], $user['uuid'], $role)
        ['1'].include?(response).should == TRUE
      end
    end
  end
end
